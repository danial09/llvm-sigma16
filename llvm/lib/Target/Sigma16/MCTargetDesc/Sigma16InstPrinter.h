//== Sigma16InstPrinter.h - Convert Sigma16 MCInst to asm syntax -*- C++-*- ==//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This class prints a Sigma16 MCInst to a .s file.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_SIGMA16_SIGMA16INSTPRINTER_H
#define LLVM_LIB_TARGET_SIGMA16_SIGMA16INSTPRINTER_H

#include "llvm/MC/MCInstPrinter.h"

namespace llvm {
// These enumeration declarations were orignally in Sigma16InstrInfo.h but
// had to be moved here to avoid circular dependencies between
// LLVMSigma16CodeGen and LLVMSigma16AsmPrinter.

class TargetMachine;

class Sigma16InstPrinter : public MCInstPrinter {
public:
    Sigma16InstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,
                       const MCRegisterInfo &MRI)
        : MCInstPrinter(MAI, MII, MRI) {}

    // Autogenerated by tblgen.
    std::pair<const char *, uint64_t> getMnemonic(const MCInst *MI) override;
    void printInstruction(const MCInst *MI, uint64_t Address, raw_ostream &O);
    static const char *getRegisterName(unsigned RegNo);
    void printRegName(raw_ostream &OS, unsigned RegNo) const override;
    void printInst(const MCInst *MI, uint64_t Address, StringRef Annot,
                   const MCSubtargetInfo &STI, raw_ostream &O) override;

    bool printAliasInstr(const MCInst *MI, uint64_t Address, raw_ostream &OS);
    //  void printCustomAliasOperand(const MCInst *MI, uint64_t Address,
    //                               unsigned OpIdx, unsigned PrintMethodIdx,
    //                               raw_ostream &O);

private:
    void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
    void printOperand(const MCInst *MI, uint64_t /*Address*/, unsigned OpNum,
                      raw_ostream &O) {
        printOperand(MI, OpNum, O);
    }
    void printUnsignedImm(const MCInst *MI, int opNum, raw_ostream &O);
    void printMemOperand(const MCInst *MI, int opNum, raw_ostream &O);
    // #if CH >= CH7_1
    //  void printMemOperandEA(const MCInst *MI, int opNum, raw_ostream &O);
    // #endif
};
} // end namespace llvm

#endif // LLVM_LIB_TARGET_SIGMA16_SIGMA16INSTPRINTER_H
